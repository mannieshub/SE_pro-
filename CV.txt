
------------------------------------------------------------------------------------
import cv2

img = cv2.imread("image.jpg")
new_width = 500
new_height = 500

cv2.imshow("Original Image", img)
cv2.waitKey(0)

im_resize = cv2.resize(img, (new_width, new_height), interpolation=cv2.INTER_LINEAR)
cv2.imshow("Resized Image", im_resize)
cv2.waitKey(0)

im_flip = cv2.flip(img, 0)
cv2.imshow("Flipped Image", im_flip)
cv2.waitKey(0)

cv2.destroyAllWindows()
------------------------------------------------------------------------------------
import cv2
import numpy as np

# create a VideoCapture object and read the video file
cap = cv2.VideoCapture('video.mp4')

# check if the video file was successfully opened
if not cap.isOpened():
    print('Error opening video file')

# read the video frame by frame
while cap.isOpened():
    # read the next frame from the video
    ret, frame = cap.read()

    # check if the frame was successfully read
    if not ret:
        print('End of video')
        break

    # display the current frame
    cv2.imshow('Frame', frame)

    # wait for 25 milliseconds and check if the user pressed 'q' key to quit
    if cv2.waitKey(25) & 0xFF == ord('q'):
        break

# release the VideoCapture object and close all windows
cap.release()
cv2.destroyAllWindows()

-------------------------------------------------------------------------
import cv2

# open the video file
cap = cv2.VideoCapture('video.mp4')

# check if the video file is successfully opened
if not cap.isOpened():
    print("Error opening video file")

# read a single frame from the video
ret, frame = cap.read()

# check if the frame is successfully read
if not ret:
    print("Error reading frame from video file")

# save the captured frame to an image file
cv2.imwrite('frame.jpg', frame)

# release the video file
cap.release()



---------------------------------------------------------------------
import cv2

# Open the video file
cap = cv2.VideoCapture('video.mp4')

# Define the codec and create VideoWriter object
fourcc = cv2.VideoWriter_fourcc(*'XVID')
out = cv2.VideoWriter('output.avi', fourcc, 20.0, (640, 480))

# Loop through the video frames and extract and save each frame
while cap.isOpened():
    ret, frame = cap.read()
    if ret:
        # Process the frame (e.g., apply a filter, resize, etc.)
        # ...
        
        # Write the processed frame to the output video file
        out.write(frame)
        
        # Display the processed frame (optional)
        cv2.imshow('frame', frame)
["{}        
        # Exit if the user presses 'q'
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break
    else:
        break

# Release the video file and the output video file
cap.release()
out.release()

# Close all windows
cv2.destroyAllWindows()


--------------------------------------------------------------
import cv2

# Load the image
img = cv2.imread('image.jpg')

# Split the image into its RGB channels
b, g, r = cv2.split(img)

# Set the green and blue channels to 0
g.fill(0)
b.fill(0)

# Merge the channels back into an RGB image, but only keep the red channel
img_red = cv2.merge((b, g, r))

# Show the resulting image
cv2.imshow('Red channel only', img_red)
cv2.waitKey(0)
cv2.destroyAllWindows()

